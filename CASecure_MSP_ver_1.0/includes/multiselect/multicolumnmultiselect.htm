<!DOCTYPE HTML>
<!-- saved from url=(0050)https://crlcu.github.io/multiselect/ -->
<!DOCTYPE html PUBLIC "" ""><HTML lang="en"><HEAD><META content="IE=11.0000" 
http-equiv="X-UA-Compatible">
     
<META name="description" lang="en" content="jQuery multiselect plugin with two sides. The user can select one or more items and send them to the other side."> 
    
<META http-equiv="Content-Type" content="text/html; charset=utf-8">
<META name="keywords" lang="en" content="jQuery multiselect plugin">     
<TITLE>jQuery multiselect plugin with two sides</TITLE>         <LINK href="https://github.com/favicon.ico" 
rel="icon" type="image/x-icon">     <LINK href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css" 
rel="stylesheet">     <LINK href="//crlcu.github.io/multiselect/lib/google-code-prettify/prettify.css" 
rel="stylesheet">     <LINK href="//crlcu.github.io/multiselect/css/style.css" 
rel="stylesheet"> 
<META name="GENERATOR" content="MSHTML 11.00.10570.1001"></HEAD> 
<BODY><A class="github ribbon" href="https://github.com/crlcu/multiselect"><IMG 
alt="Fork me on GitHub" src="jQuery%20multiselect%20plugin%20with%20two%20sides_files/forkme_right_orange_ff7600.png"> 
    </A>
<DIV class="navbar navbar-inverse navbar-fixed-top">
<DIV class="navbar-inner">
<DIV class="container">
<DIV class="navbar-header"><BUTTON class="navbar-toggle collapsed" type="button" 
data-toggle="collapse" data-target="#bs-example-navbar-collapse-1"><SPAN class="sr-only">Toggle 
navigation</SPAN>                         <SPAN class="icon-bar"></SPAN><SPAN 
class="icon-bar"></SPAN><SPAN class="icon-bar"></SPAN></BUTTON>                  
   <A class="navbar-brand scroll" 
href="https://crlcu.github.io/multiselect/#">Multiselect</A>                 
</DIV>
<DIV class="collapse navbar-collapse">
<UL class="nav navbar-nav">
  <LI><A class="scroll" 
  href="https://crlcu.github.io/multiselect/#">Home</A></LI>
  <LI><A class="scroll" href="https://crlcu.github.io/multiselect/#documentation">Documentation</A></LI>
  <LI><A class="scroll" href="https://crlcu.github.io/multiselect/#browser-support">Browser 
  Support</A></LI>
  <LI class="dropdown"><A class="dropdown-toggle" role="button" aria-expanded="false" 
  href="https://crlcu.github.io/multiselect/#" data-toggle="dropdown">Examples 
  <SPAN class="caret"></SPAN></A>
  <UL class="dropdown-menu" role="menu">
    <LI><A href="https://crlcu.github.io/multiselect/examples/zero-configuration.html">Zero 
    configuration</A></LI>
    <LI><A 
    href="https://crlcu.github.io/multiselect/examples/data-options.html">With 
    <CODE>data</CODE> options</A></LI>
    <LI><A href="https://crlcu.github.io/multiselect/examples/javascript-options.html">With 
    <CODE>javascript</CODE> options</A></LI>
    <LI><A href="https://crlcu.github.io/multiselect/examples/search.html">With 
    search</A></LI>
    <LI><A href="https://crlcu.github.io/multiselect/examples/keep-rendering-sort.html">Keep 
    rendering sort</A></LI>
    <LI><A 
    href="https://crlcu.github.io/multiselect/examples/undo-redo.html">Undo / 
    Redo</A></LI>
    <LI><A href="https://crlcu.github.io/multiselect/examples/multiple-destinations.html">Multiple 
    destinations</A></LI>
    <LI><A 
    href="https://crlcu.github.io/multiselect/examples/optgroup.html">With 
    <CODE>optgroup</CODE></A></LI>
    <LI><A 
    href="https://crlcu.github.io/multiselect/examples/move-up-down.html">With 
    move <CODE>up</CODE>/<CODE>down</CODE> buttons</A></LI></UL></LI>
  <LI><A class="scroll" 
  href="https://crlcu.github.io/multiselect/#download">Download</A></LI></UL></DIV></DIV></DIV></DIV>
<DIV class="container" id="wrap">
<DIV id="home">
<DIV class="jumbotron">
<H1>Multiselect</H1>
<P>This is a small  <A href="http://jquery.com/" target="_blank">jQuery</A> 
plugin that helps you improve the                     <STRONG>user 
experience</STRONG> regarding the use of multiple cross selects.                 
</P>
<P>It is very <STRONG>easy to install</STRONG> and can be <STRONG>easily 
customized</STRONG> because it has <STRONG>callbacks</STRONG> for many events, 
such as :                     
<DIV class="row">
<DIV class="col-xs-6">
<UL>
  <LI><A 
  href="https://crlcu.github.io/multiselect/#beforeMoveToRight">beforeMoveToRight</A></LI>
  <LI><A 
  href="https://crlcu.github.io/multiselect/#beforeMoveToLeft">beforeMoveToLeft</A></LI></UL></DIV>
<DIV class="col-xs-6">
<UL>
  <LI><A 
  href="https://crlcu.github.io/multiselect/#afterMoveToRight">afterMoveToRight</A></LI>
  <LI><A 
  href="https://crlcu.github.io/multiselect/#afterMoveToLeft">afterMoveToLeft</A></LI></UL></DIV></DIV>
<P></P>
<P>It also has a <A href="https://crlcu.github.io/multiselect/#sort">sort</A> 
function that can be defined in order of your needs for each multiple 
select.</P>
<P>You can <STRONG>fully customize</STRONG> it via <STRONG>CSS</STRONG>, you can 
extend it and have as <STRONG>many multi selects</STRONG> as you want on the 
page.</P>
<P><A class="btn btn-primary btn-lg" href="https://crlcu.github.io/multiselect/#documentation">Documentation</A></P></DIV></DIV>
<DIV id="documentation">
<DIV class="page-header">
<H3>Documentation</H3></DIV>
<H4>Options:</H4>
<TABLE class="table table-bordered table-striped">
  <THEAD>
  <TR>
    <TH>Name</TH>
    <TH>type</TH>
    <TH>default</TH>
    <TH>description</TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD>right</TD>
    <TD><CODE>string</CODE> jQuery selector</TD>
    <TD><CODE>multiselect_id</CODE>_to</TD>
    <TD>The <CODE>select</CODE> where the options are moved to</TD></TR>
  <TR>
    <TD>rightSelected</TD>
    <TD><CODE>string</CODE> jQuery selector</TD>
    <TD><CODE>multiselect_id</CODE>_rightSelected</TD>
    <TD>The <CODE>button</CODE> that moves selected options from left to 
    right</TD></TR>
  <TR>
    <TD>rightAll</TD>
    <TD><CODE>string</CODE> jQuery selector</TD>
    <TD><CODE>multiselect_id</CODE>_rightAll</TD>
    <TD>The <CODE>button</CODE> that moves all options from left to 
right</TD></TR>
  <TR>
    <TD>leftSelected</TD>
    <TD><CODE>string</CODE> jQuery selector</TD>
    <TD><CODE>multiselect_id</CODE>_leftSelected</TD>
    <TD>The <CODE>button</CODE> that moves selected options from right to 
    left</TD></TR>
  <TR>
    <TD>leftAll</TD>
    <TD><CODE>string</CODE> jQuery selector</TD>
    <TD><CODE>multiselect_id</CODE>_leftAll</TD>
    <TD>The <CODE>button</CODE> that moves all options from right to 
left</TD></TR>
  <TR>
    <TD>undo</TD>
    <TD><CODE>string</CODE> jQuery selector</TD>
    <TD><CODE>multiselect_id</CODE>_undo</TD>
    <TD>The <CODE>button</CODE> that triggers the undo action</TD></TR>
  <TR>
    <TD>redo</TD>
    <TD><CODE>string</CODE> jQuery selector</TD>
    <TD><CODE>multiselect_id</CODE>_redo</TD>
    <TD>The <CODE>button</CODE> that triggers the redo action</TD></TR>
  <TR>
    <TD>moveUp</TD>
    <TD><CODE>string</CODE> jQuery selector</TD>
    <TD><CODE>multiselect_id</CODE>_move_up</TD>
    <TD>The <CODE>button</CODE> that move options from right side to the 
  top</TD></TR>
  <TR>
    <TD>moveDown</TD>
    <TD><CODE>string</CODE> jQuery selector</TD>
    <TD><CODE>multiselect_id</CODE>_move_down</TD>
    <TD>The <CODE>button</CODE> that move options from right side to the 
    bottom</TD></TR>
  <TR>
    <TD>startUp</TD>
    <TD><CODE>function</CODE> or <CODE>false</CODE></TD>
    <TD><CODE>remove</CODE> from left all options that are present in right</TD>
    <TD>Whatever you want to do with <CODE>$left</CODE> and 
      <CODE>$right</CODE> elements when the <CODE>multiselect</CODE> plugin is 
      initialised</TD></TR>
  <TR id="sort">
    <TD>sort</TD>
    <TD><CODE>function</CODE> or <CODE>false</CODE></TD>
    <TD><CODE>sort</CODE> options alphabetically</TD>
    <TD>Will sort options when an action happend into right or left 
    elements.</TD></TR>
  <TR id="beforeMoveToRight">
    <TD>beforeMoveToRight</TD>
    <TD><CODE>function</CODE></TD>
    <TD>return <CODE>true</CODE></TD>
    <TD>                            Whatever you want to do with 
      <CODE>$left</CODE>, <CODE>$right</CODE> and <CODE>$options</CODE> elements 
      before they are moved to right.<BR><BR><CODE>beforeMoveToRight: 
      function($left, $right, $options) { ...; return Boolean; }</CODE>.<BR><BR>
      <UL>
        <LI><CODE>$left</CODE> - jQuery element pointing to left side 
        <CODE>select</CODE> element</LI>
        <LI><CODE>$right</CODE> - jQuery element pointing to right side 
        <CODE>select</CODE> element</LI>
        <LI><CODE>$options</CODE> - jQuery element containing all selected 
        options</LI></UL>                            Keep in mind that this 
      function must return a boolean value.<BR>
      <UL>
        <LI><CODE>true</CODE> will let the action to be performed</LI>
        <LI><CODE>false</CODE> will stop the action</LI></UL></TD></TR>
  <TR id="moveToRight">
    <TD>moveToRight</TD>
    <TD><CODE>function</CODE></TD>
    <TD>return <CODE>this</CODE></TD>
    <TD>                            If you want to define your own 
      <CODE>moveToRight</CODE> functionality you can do this by 
      defining<BR><BR><CODE>moveToRight: function(Multiselect, $options, event, 
      silent, skipStack) { ... }</CODE><BR><BR>
      <UL>
        <LI><CODE>Multiselect</CODE> - current instance of multiselect</LI>
        <LI><CODE>$options</CODE> - jQuery element containing all selected 
        options</LI>
        <LI><CODE>event</CODE> - the event that initialised the action</LI>
        <LI><CODE>silent</CODE> - <CODE>boolean</CODE> that tells if you have to 
        trigger <CODE>beforeMoveToRight</CODE> and 
        <CODE>afterMoveToRight</CODE></LI>
        <LI><CODE>skipStack</CODE> - <CODE>boolean</CODE> that tells if you have 
        to handle <CODE>undo/redo</CODE> stack</LI></UL></TD></TR>
  <TR id="afterMoveToRight">
    <TD>afterMoveToRight</TD>
    <TD><CODE>function</CODE></TD>
    <TD>no action</TD>
    <TD>                            Whatever you want to do with 
      <CODE>$left</CODE>, <CODE>$right</CODE> and <CODE>$options</CODE> elements 
      after they are moved to right.<BR><BR><CODE>afterMoveToRight: 
      function($left, $right, $options) { ...; }</CODE><BR><BR>
      <UL>
        <LI><CODE>$left</CODE> - jQuery element pointing to left side 
        <CODE>select</CODE> element</LI>
        <LI><CODE>$right</CODE> - jQuery element pointing to right side 
        <CODE>select</CODE> element</LI>
        <LI><CODE>$options</CODE> - jQuery element containing all selected 
        options</LI></UL></TD></TR>
  <TR id="beforeMoveToLeft">
    <TD>beforeMoveToLeft</TD>
    <TD><CODE>function</CODE></TD>
    <TD>return <CODE>true</CODE></TD>
    <TD>                            Whatever you want to do with 
      <CODE>$left</CODE>, <CODE>$right</CODE> and <CODE>$options</CODE> elements 
      before they are moved to left.<BR><BR><CODE>beforeMoveToLeft: 
      function($left, $right, $options) { ...; return Boolean; }</CODE>.<BR><BR>
      <UL>
        <LI><CODE>$left</CODE> - jQuery element pointing to left side 
        <CODE>select</CODE> element</LI>
        <LI><CODE>$right</CODE> - jQuery element pointing to right side 
        <CODE>select</CODE> element</LI>
        <LI><CODE>$options</CODE> - jQuery element containing all selected 
        options</LI></UL>                            Keep in mind that this 
      function must return a boolean value.<BR>
      <UL>
        <LI><CODE>true</CODE> will let the action to be performed</LI>
        <LI><CODE>false</CODE> will stop the action</LI></UL></TD></TR>
  <TR id="moveToLeft">
    <TD>moveToLeft</TD>
    <TD><CODE>function</CODE></TD>
    <TD>return <CODE>this</CODE></TD>
    <TD>                            If you want to define your own 
      <CODE>moveToLeft</CODE> functionality you can do this by 
      defining<BR><BR><CODE>moveToLeft: function(Multiselect, $options, event, 
      silent, skipStack) { ... }</CODE><BR><BR>
      <UL>
        <LI><CODE>Multiselect</CODE> - current instance of multiselect</LI>
        <LI><CODE>$options</CODE> - jQuery element containing all selected 
        options</LI>
        <LI><CODE>event</CODE> - the event that initialised the action</LI>
        <LI><CODE>silent</CODE> - <CODE>boolean</CODE> that tells if you have to 
        trigger <CODE>beforeMoveToRight</CODE> and 
        <CODE>afterMoveToRight</CODE></LI>
        <LI><CODE>skipStack</CODE> - <CODE>boolean</CODE> that tells if you have 
        to handle <CODE>undo/redo</CODE> stack</LI></UL></TD></TR>
  <TR id="afterMoveToLeft">
    <TD>afterMoveToLeft</TD>
    <TD><CODE>function</CODE></TD>
    <TD>no action</TD>
    <TD>                            Whatever you want to do with 
      <CODE>$left</CODE>, <CODE>$right</CODE> and <CODE>$options</CODE> elements 
      after they are moved to right.<BR><BR><CODE>afterMoveToLeft: 
      function($left, $right, $options) { ...; }</CODE><BR><BR>
      <UL>
        <LI><CODE>$left</CODE> - jQuery element pointing to left side 
        <CODE>select</CODE> element</LI>
        <LI><CODE>$right</CODE> - jQuery element pointing to right side 
        <CODE>select</CODE> element</LI>
        <LI><CODE>$options</CODE> - jQuery element containing all selected 
        options</LI></UL></TD></TR>
  <TR id="beforeMoveUp">
    <TD>beforeMoveUp</TD>
    <TD><CODE>function</CODE></TD>
    <TD>return <CODE>true</CODE></TD>
    <TD>                            Whatever you want to do with 
      <CODE>$options</CODE> elements before they are moved 
      up.<BR><BR><CODE>beforeMoveUp: function( $options) { ...; return Boolean; 
      }</CODE>.<BR><BR>
      <UL>
        <LI><CODE>$options</CODE> - jQuery element containing all selected 
        options</LI></UL>                            Keep in mind that this 
      function must return a boolean value.<BR>
      <UL>
        <LI><CODE>true</CODE> will let the action to be performed</LI>
        <LI><CODE>false</CODE> will stop the action</LI></UL></TD></TR>
  <TR id="afterMoveUp">
    <TD>afterMoveUp</TD>
    <TD><CODE>function</CODE></TD>
    <TD>no action</TD>
    <TD>                            Whatever you want to do with 
      <CODE>$options</CODE> elements after they are moved 
      up.<BR><BR><CODE>afterMoveUp: function($options) { ...; }</CODE><BR><BR>
      <UL>
        <LI><CODE>$options</CODE> - jQuery element containing all selected 
        options</LI></UL></TD></TR>
  <TR id="beforeMoveDown">
    <TD>beforeMoveDown</TD>
    <TD><CODE>function</CODE></TD>
    <TD>return <CODE>true</CODE></TD>
    <TD>                            Whatever you want to do with 
      <CODE>$options</CODE> elements before they are moved 
      down.<BR><BR><CODE>beforeMoveDown: function( $options) { ...; return 
      Boolean; }</CODE>.<BR><BR>
      <UL>
        <LI><CODE>$options</CODE> - jQuery element containing all selected 
        options</LI></UL>                            Keep in mind that this 
      function must return a boolean value.<BR>
      <UL>
        <LI><CODE>true</CODE> will let the action to be performed</LI>
        <LI><CODE>false</CODE> will stop the action</LI></UL></TD></TR>
  <TR id="afterMoveDown">
    <TD>afterMoveDown</TD>
    <TD><CODE>function</CODE></TD>
    <TD>no action</TD>
    <TD>                            Whatever you want to do with 
      <CODE>$options</CODE> elements after they are moved 
      down.<BR><BR><CODE>afterMoveDown: function($options) { ...; 
      }</CODE><BR><BR>
      <UL>
        <LI><CODE>$options</CODE> - jQuery element containing all selected 
        options</LI></UL></TD></TR>
  <TR>
    <TD>keepRenderingSort</TD>
    <TD><CODE>boolean</CODE></TD>
    <TD><CODE>false</CODE></TD>
    <TD>                            When you want to keep options sorted as 
      they was rendered, <CODE>keepRenderingSort</CODE> must be 
      <CODE>true</CODE>.<BR>                            When 
      <CODE>keepRenderingSort</CODE> is <CODE>true</CODE>, <CODE>sort</CODE> 
      function will be ignored.                         </TD></TR>
  <TR>
    <TD>submitAllLeft</TD>
    <TD><CODE>boolean</CODE></TD>
    <TD><CODE>true</CODE></TD>
    <TD>                            When you don’t want to send all options 
      from the left side to server, <CODE>submitAllLeft</CODE> must be 
      <CODE>false</CODE>.                         </TD></TR>
  <TR>
    <TD>submitAllRight</TD>
    <TD><CODE>boolean</CODE></TD>
    <TD><CODE>true</CODE></TD>
    <TD>                            When you don’t want to send all options 
      from the right side to server, <CODE>submitAllRight</CODE> must be 
      <CODE>false</CODE>.                         </TD></TR>
  <TR>
    <TD>search</TD>
    <TD><CODE>Object</CODE></TD>
    <TD><CODE>null</CODE></TD>
    <TD>                            When you want to have search fields for 
      <CODE>left</CODE> and <CODE>right</CODE> elements you can do this by 
      providing following value:<BR>
<PRE class="prettyprint linenums">search: {
    left: '&lt;input type="text" name="q" class="form-control" placeholder="Search..." /&gt;',
    right: '&lt;input type="text" name="q" class="form-control" placeholder="Search..." /&gt;',
}
</PRE> 
                                 When you want to have search field only for 
      <CODE>left</CODE> element you can do this by providing following 
value:<BR>
<PRE class="prettyprint linenums">search: {
    left: '&lt;input type="text" name="q" class="form-control" placeholder="Search..." /&gt;',
}
</PRE></TD></TR>
  <TR id="fireSearch">
    <TD>fireSearch</TD>
    <TD><CODE>function</CODE></TD>
    <TD>return <CODE>true</CODE> if search length is great than 1</TD>
    <TD>                            Tell to multiselect when to start applying 
      the search.<BR><BR><CODE>fireSearch: function(value) { ...; return 
      Boolean; }</CODE><BR><BR>
      <UL>
        <LI><CODE>value</CODE> - String search entered by the 
  user</LI></UL></TD></TR></TBODY></TABLE></DIV>
<DIV id="browser-support">
<DIV class="page-header">
<H3>Browser Support</H3></DIV>
<H4>The following browsers are supported:</H4>
<UL>
  <LI>Internet Explorer 7+</LI>
  <LI>Google Chrome</LI>
  <LI>Mozilla Firefox</LI>
  <LI>Safari</LI>
  <LI>Opera</LI></UL></DIV>
<DIV id="download">
<DIV class="page-header">
<H3>Download</H3></DIV>
<DIV class="row">
<DIV class="col-xs-4">
<P><A class="btn btn-lg btn-primary" href="https://raw.github.com/crlcu/multiselect/master/dist/js/multiselect.js">Download 
multiselect.js</A></P></DIV>
<DIV class="col-xs-4">
<P><A class="btn btn-lg btn-success" href="https://raw.github.com/crlcu/multiselect/master/dist/js/multiselect.min.js">Download 
multiselect.min.js</A></P></DIV>
<DIV class="col-xs-4">
<P><A class="btn btn-lg btn-info" href="https://github.com/crlcu/multiselect/archive/master.zip">Download 
multiselect.zip</A></P></DIV></DIV></DIV></DIV>
<SCRIPT src="" type="text/javascript"></SCRIPT>
 
<SCRIPT src="" type="text/javascript"></SCRIPT>
 
<SCRIPT>
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
    
    ga('create', 'UA-39934286-1', 'github.com');
    ga('send', 'pageview');
</SCRIPT>
 
<SCRIPT type="text/javascript">
$(document).ready(function() {
    // make code pretty
    window.prettyPrint && prettyPrint();
    
    if ( window.location.hash ) {
        scrollTo(window.location.hash);
    }
    
    $('.nav').on('click', 'a.scroll', function(e) {
        scrollTo($(this).attr('href'));
    });
});

function scrollTo( id ) {
    if ( $(id).length ) {
        $('html,body').animate({scrollTop: $(id).offset().top - 60},'slow');
    }
}
</SCRIPT>
 </BODY></HTML>
